package huayang.hychat.model.po;

import java.util.ArrayList;
import java.util.List;

public class ChatFriendExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table chat_friend
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table chat_friend
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table chat_friend
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chat_friend
     *
     * @mbggenerated
     */
    public ChatFriendExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chat_friend
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chat_friend
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chat_friend
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chat_friend
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chat_friend
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chat_friend
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chat_friend
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chat_friend
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chat_friend
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chat_friend
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table chat_friend
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andFriendFlowIsNull() {
            addCriterion("friend_flow is null");
            return (Criteria) this;
        }

        public Criteria andFriendFlowIsNotNull() {
            addCriterion("friend_flow is not null");
            return (Criteria) this;
        }

        public Criteria andFriendFlowEqualTo(String value) {
            addCriterion("friend_flow =", value, "friendFlow");
            return (Criteria) this;
        }

        public Criteria andFriendFlowNotEqualTo(String value) {
            addCriterion("friend_flow <>", value, "friendFlow");
            return (Criteria) this;
        }

        public Criteria andFriendFlowGreaterThan(String value) {
            addCriterion("friend_flow >", value, "friendFlow");
            return (Criteria) this;
        }

        public Criteria andFriendFlowGreaterThanOrEqualTo(String value) {
            addCriterion("friend_flow >=", value, "friendFlow");
            return (Criteria) this;
        }

        public Criteria andFriendFlowLessThan(String value) {
            addCriterion("friend_flow <", value, "friendFlow");
            return (Criteria) this;
        }

        public Criteria andFriendFlowLessThanOrEqualTo(String value) {
            addCriterion("friend_flow <=", value, "friendFlow");
            return (Criteria) this;
        }

        public Criteria andFriendFlowLike(String value) {
            addCriterion("friend_flow like", value, "friendFlow");
            return (Criteria) this;
        }

        public Criteria andFriendFlowNotLike(String value) {
            addCriterion("friend_flow not like", value, "friendFlow");
            return (Criteria) this;
        }

        public Criteria andFriendFlowIn(List<String> values) {
            addCriterion("friend_flow in", values, "friendFlow");
            return (Criteria) this;
        }

        public Criteria andFriendFlowNotIn(List<String> values) {
            addCriterion("friend_flow not in", values, "friendFlow");
            return (Criteria) this;
        }

        public Criteria andFriendFlowBetween(String value1, String value2) {
            addCriterion("friend_flow between", value1, value2, "friendFlow");
            return (Criteria) this;
        }

        public Criteria andFriendFlowNotBetween(String value1, String value2) {
            addCriterion("friend_flow not between", value1, value2, "friendFlow");
            return (Criteria) this;
        }

        public Criteria andOriginUserFlowIsNull() {
            addCriterion("origin_user_flow is null");
            return (Criteria) this;
        }

        public Criteria andOriginUserFlowIsNotNull() {
            addCriterion("origin_user_flow is not null");
            return (Criteria) this;
        }

        public Criteria andOriginUserFlowEqualTo(String value) {
            addCriterion("origin_user_flow =", value, "originUserFlow");
            return (Criteria) this;
        }

        public Criteria andOriginUserFlowNotEqualTo(String value) {
            addCriterion("origin_user_flow <>", value, "originUserFlow");
            return (Criteria) this;
        }

        public Criteria andOriginUserFlowGreaterThan(String value) {
            addCriterion("origin_user_flow >", value, "originUserFlow");
            return (Criteria) this;
        }

        public Criteria andOriginUserFlowGreaterThanOrEqualTo(String value) {
            addCriterion("origin_user_flow >=", value, "originUserFlow");
            return (Criteria) this;
        }

        public Criteria andOriginUserFlowLessThan(String value) {
            addCriterion("origin_user_flow <", value, "originUserFlow");
            return (Criteria) this;
        }

        public Criteria andOriginUserFlowLessThanOrEqualTo(String value) {
            addCriterion("origin_user_flow <=", value, "originUserFlow");
            return (Criteria) this;
        }

        public Criteria andOriginUserFlowLike(String value) {
            addCriterion("origin_user_flow like", value, "originUserFlow");
            return (Criteria) this;
        }

        public Criteria andOriginUserFlowNotLike(String value) {
            addCriterion("origin_user_flow not like", value, "originUserFlow");
            return (Criteria) this;
        }

        public Criteria andOriginUserFlowIn(List<String> values) {
            addCriterion("origin_user_flow in", values, "originUserFlow");
            return (Criteria) this;
        }

        public Criteria andOriginUserFlowNotIn(List<String> values) {
            addCriterion("origin_user_flow not in", values, "originUserFlow");
            return (Criteria) this;
        }

        public Criteria andOriginUserFlowBetween(String value1, String value2) {
            addCriterion("origin_user_flow between", value1, value2, "originUserFlow");
            return (Criteria) this;
        }

        public Criteria andOriginUserFlowNotBetween(String value1, String value2) {
            addCriterion("origin_user_flow not between", value1, value2, "originUserFlow");
            return (Criteria) this;
        }

        public Criteria andTargetUserFlowIsNull() {
            addCriterion("target_user_flow is null");
            return (Criteria) this;
        }

        public Criteria andTargetUserFlowIsNotNull() {
            addCriterion("target_user_flow is not null");
            return (Criteria) this;
        }

        public Criteria andTargetUserFlowEqualTo(String value) {
            addCriterion("target_user_flow =", value, "targetUserFlow");
            return (Criteria) this;
        }

        public Criteria andTargetUserFlowNotEqualTo(String value) {
            addCriterion("target_user_flow <>", value, "targetUserFlow");
            return (Criteria) this;
        }

        public Criteria andTargetUserFlowGreaterThan(String value) {
            addCriterion("target_user_flow >", value, "targetUserFlow");
            return (Criteria) this;
        }

        public Criteria andTargetUserFlowGreaterThanOrEqualTo(String value) {
            addCriterion("target_user_flow >=", value, "targetUserFlow");
            return (Criteria) this;
        }

        public Criteria andTargetUserFlowLessThan(String value) {
            addCriterion("target_user_flow <", value, "targetUserFlow");
            return (Criteria) this;
        }

        public Criteria andTargetUserFlowLessThanOrEqualTo(String value) {
            addCriterion("target_user_flow <=", value, "targetUserFlow");
            return (Criteria) this;
        }

        public Criteria andTargetUserFlowLike(String value) {
            addCriterion("target_user_flow like", value, "targetUserFlow");
            return (Criteria) this;
        }

        public Criteria andTargetUserFlowNotLike(String value) {
            addCriterion("target_user_flow not like", value, "targetUserFlow");
            return (Criteria) this;
        }

        public Criteria andTargetUserFlowIn(List<String> values) {
            addCriterion("target_user_flow in", values, "targetUserFlow");
            return (Criteria) this;
        }

        public Criteria andTargetUserFlowNotIn(List<String> values) {
            addCriterion("target_user_flow not in", values, "targetUserFlow");
            return (Criteria) this;
        }

        public Criteria andTargetUserFlowBetween(String value1, String value2) {
            addCriterion("target_user_flow between", value1, value2, "targetUserFlow");
            return (Criteria) this;
        }

        public Criteria andTargetUserFlowNotBetween(String value1, String value2) {
            addCriterion("target_user_flow not between", value1, value2, "targetUserFlow");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table chat_friend
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table chat_friend
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}